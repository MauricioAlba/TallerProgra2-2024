/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package layout;

import Mysql.Mysql;
import java.sql.Statement;

import java.sql.Connection;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/**
 *
 * @author samue
 */
public class layout_salas extends javax.swing.JFrame {

    public void setModel(DefaultTableModel model){
    jTableLista.setModel(model);
    }

   
    DefaultTableModel model;
    Connection conn;
    Statement sent;
    /**
     * Creates new form layout_reserva
     */
    public layout_salas() {
        initComponents();
        iniciarComponentes();
        initColors();
       
    }
    
     
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpLista = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jtfBuscar = new javax.swing.JTextField();
        jbtnBuscar = new javax.swing.JButton();
        jbtnEliminar = new javax.swing.JButton();
        jbtnSalir = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableLista = new javax.swing.JTable();
        recharge = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        jpLista.setBackground(new java.awt.Color(255, 255, 255));
        jpLista.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista de Salas"));
        jpLista.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Buscar:");
        jpLista.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 37, -1, -1));

        jtfBuscar.setToolTipText("");
        jtfBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jtfBuscarKeyPressed(evt);
            }
        });
        jpLista.add(jtfBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 34, 112, -1));

        jbtnBuscar.setText("Buscar");
        jbtnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBuscarActionPerformed(evt);
            }
        });
        jpLista.add(jbtnBuscar, new org.netbeans.lib.awtextra.AbsoluteConstraints(178, 34, -1, -1));

        jbtnEliminar.setText("Eliminar");
        jbtnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEliminarActionPerformed(evt);
            }
        });
        jpLista.add(jbtnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(256, 34, -1, -1));

        jbtnSalir.setText("Salir");
        jbtnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalirActionPerformed(evt);
            }
        });
        jpLista.add(jbtnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(334, 34, -1, -1));

        jTableLista.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(jTableLista);

        jpLista.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 69, 398, 244));

        recharge.setBackground(new java.awt.Color(255, 255, 255));
        recharge.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Files/reload.png"))); // NOI18N
        recharge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rechargeMouseClicked(evt);
            }
        });
        jpLista.add(recharge, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jpLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jpLista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalirActionPerformed
        // TODO add your handling code here:
        dispose();
        panel_salas.salasbooleanTrue();
    }//GEN-LAST:event_jbtnSalirActionPerformed

    private void jbtnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBuscarActionPerformed
        // TODO add your handling code here:
        Buscar();
        
        
    }//GEN-LAST:event_jbtnBuscarActionPerformed

    private void jbtnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEliminarActionPerformed
        // TODO add your handling code here:
         try {
            int fila = jTableLista.getSelectedRow();
            String sql = "delete from room where id_room="+jTableLista.getValueAt(fila, 0);
            sent=conn.createStatement();
            int n = sent.executeUpdate(sql);
            if(n>0){
                Llenar();
                JOptionPane.showMessageDialog(null, "Datos Eliminados");
                Limpiar();
            } 
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error"+ e.getMessage());
        }
    }//GEN-LAST:event_jbtnEliminarActionPerformed

    private void rechargeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rechargeMouseClicked
        // TODO add your handling code here:
        Llenar();
    }//GEN-LAST:event_rechargeMouseClicked

    private void jtfBuscarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfBuscarKeyPressed
        // TODO add your handling code here:
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            Buscar();
        }
    }//GEN-LAST:event_jtfBuscarKeyPressed
public static void seleccionarFilaPorNombre(JTable table, String nombre, int columna) {
    DefaultTableModel model = (DefaultTableModel) table.getModel();
    table.clearSelection();

    for (int i = 0; i < model.getRowCount(); i++) {
        String valor = model.getValueAt(i, columna).toString();
        
        if (valor.equals(nombre)) {
            table.addRowSelectionInterval(i, i);
            table.scrollRectToVisible(table.getCellRect(i, 0, true));
        }
    }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(layout_salas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(layout_salas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(layout_salas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(layout_salas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
  

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new layout_salas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableLista;
    private javax.swing.JButton jbtnBuscar;
    private javax.swing.JButton jbtnEliminar;
    private javax.swing.JButton jbtnSalir;
    private javax.swing.JPanel jpLista;
    private javax.swing.JTextField jtfBuscar;
    private javax.swing.JLabel recharge;
    // End of variables declaration//GEN-END:variables

    private void iniciarComponentes() {
        
        jTableLista.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        
        try{
        conn = Mysql.conectar();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null, e.getMessage());       
        } 
        
        setLocationRelativeTo(null);
        setResizable(false);
        
        Llenar();
        
        addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                    panel_salas.salasbooleanTrue();
                    dispose(); 
                }
        });
     
        setHint(jtfBuscar, "Nombre de la sala");
        
        jtfBuscar.getDocument().addDocumentListener(new DocumentListener(){
            @Override
            
             public void insertUpdate(DocumentEvent e) {
                updateHint(jtfBuscar);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateHint(jtfBuscar);
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateHint(jtfBuscar);
            }
        });
            
    }
    
    private static void setHint(JTextField textField, String hint) {
        textField.setText(hint); // Establece el hint como texto inicial
        textField.setForeground(Color.GRAY); // Establece el color del hint

        // Manejo de enfoque para borrar el hint
        textField.addFocusListener(new java.awt.event.FocusAdapter() {
            @Override
            public void focusGained(java.awt.event.FocusEvent evt) {
                if (textField.getText().equals(hint)) {
                    textField.setText("");
                    textField.setForeground(Color.BLACK);
                }
            }

            @Override
            public void focusLost(java.awt.event.FocusEvent evt) {
                if (textField.getText().isEmpty()) {
                    textField.setForeground(Color.GRAY);
                    textField.setText(hint);
                }
            }
        });
    }

    private static void updateHint(JTextField textField) {
        // Cambia el color del texto a negro si no está vacío
        if (!textField.getText().isEmpty() && !textField.getForeground().equals(Color.BLACK)) {
            textField.setForeground(Color.BLACK);
        }
    }
    
    private void Buscar(){
        if(!jtfBuscar.getText().isBlank()){
            String name = jtfBuscar.getText();
            
            seleccionarFilaPorNombre(jTableLista, name, 1);
            
            Limpiar();
            
        }else{
        JOptionPane.showConfirmDialog(rootPane, "Escriba un nombre");
        }
    }
    
    private void initColors(){
        Color red = new java.awt.Color(175, 27, 35, 1);
        Color letter = new java.awt.Color(255,255,255);
        Color blue = new java.awt.Color(0,25,60);
        //003166
        
        //Panels
        
        
        //buttons
       
        jbtnBuscar.setBackground(red);
        jbtnEliminar.setBackground(red);
        jbtnSalir.setBackground(red);
        jbtnBuscar.setForeground(letter);
        jbtnEliminar.setForeground(letter);
        jbtnSalir.setForeground(letter);
        
        //Tables
        jTableLista.setGridColor(red);
        
        //TExtField        
    }
    
     void Llenar(){
        try {
            conn = Mysql.conectar();
            String[]titulos = {"id", "name", "description", "capacity", "status"}; 
            String sql = "SELECT * FROM room ORDER BY id_room ASC";
            model = new DefaultTableModel(null, titulos);
            sent= conn.createStatement();
            ResultSet rs=sent.executeQuery(sql);
            
            String[]fila = new String[5];
            while(rs.next()){
                fila[0]=rs.getString("id_room");
                fila[1]=rs.getString("name_room");
                fila[2]=rs.getString("description");
                fila[3]=rs.getString("ammount_max");
                fila[4]=rs.getString("status");
                model.addRow(fila);
            }
            jTableLista.setModel(model);
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void Limpiar() {
    
    jtfBuscar.setText("");
    
    }
   
  }
